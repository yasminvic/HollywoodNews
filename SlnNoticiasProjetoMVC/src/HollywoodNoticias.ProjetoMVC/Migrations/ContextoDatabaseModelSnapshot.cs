// <auto-generated />
using System;
using HollywoodNoticias.ProjetoMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HollywoodNoticias.ProjetoMVC.Migrations
{
    [DbContext(typeof(ContextoDatabase))]
    partial class ContextoDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HollywoodNoticias.ProjetoMVC.Models.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("categoria");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Filmes"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Séries"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Premiações"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Escândalos"
                        });
                });

            modelBuilder.Entity("HollywoodNoticias.ProjetoMVC.Models.Entities.ConfiguracaoSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contato");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("endereco");

                    b.Property<string>("NomeSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nomesite");

                    b.HasKey("Id");

                    b.ToTable("configsist");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contato = "(47) 3333-3333",
                            Endereco = "Rua Fulaninho de Tal, 2115",
                            NomeSite = "Hollywood News"
                        });
                });

            modelBuilder.Entity("HollywoodNoticias.ProjetoMVC.Models.Entities.NewsLetter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("newsletter");
                });

            modelBuilder.Entity("HollywoodNoticias.ProjetoMVC.Models.Entities.Noticia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("CategoriaId");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.Property<string>("EnderecoImagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("enderecoImagem");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("texto");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("titulo");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("noticia");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 3,
                            Descricao = "\"The Fabelmans\", \"Os Banshees de Inisherin\", \"Abbott Elementary\" e \"House of the Dragon\" foram destaques da premiação, que ocorreu nesta terça-feira e elegeu os melhores filmes e programas de TV do ano passado",
                            EnderecoImagem = "https://www.rbsdirect.com.br/imagesrc/35808815.jpg?w=700&rv=2-10-05&safari",
                            Texto = "A 80ª edição do Globo de Ouro ocorreu na noite desta terça-feira (10). A cerimônia abre a temporada de premiações de 2023 e é promovida pela Associação de Imprensa Estrangeira de Hollywood, que elege os melhores filmes e programas de TV do ano passado. ",
                            Titulo = "Vencedores Globo de Ouro 2023"
                        });
                });

            modelBuilder.Entity("HollywoodNoticias.ProjetoMVC.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataCreated");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("login");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<int>("Perfil")
                        .HasColumnType("int")
                        .HasColumnName("perfil");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("senha");

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 1, 11, 21, 23, 56, 146, DateTimeKind.Local).AddTicks(6422),
                            Email = "yasmin@gmail.com",
                            Login = "yasminvic",
                            Nome = "Yasmin",
                            Perfil = 1,
                            Senha = "123"
                        });
                });

            modelBuilder.Entity("HollywoodNoticias.ProjetoMVC.Models.Entities.Noticia", b =>
                {
                    b.HasOne("HollywoodNoticias.ProjetoMVC.Models.Entities.Categoria", "Categoria")
                        .WithMany("Noticias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("HollywoodNoticias.ProjetoMVC.Models.Entities.Categoria", b =>
                {
                    b.Navigation("Noticias");
                });
#pragma warning restore 612, 618
        }
    }
}
